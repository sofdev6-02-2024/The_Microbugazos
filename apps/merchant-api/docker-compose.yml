version: "3.8"

services:
  user_service_db:
    container_name: "user_service_db"
    image: postgres:latest
    restart: always
    ports:
      - "${USER_SERVICE_POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${USER_SERVICE_DB}
    volumes:
      - user_db:/var/lib/postgresql/data
    networks:
      - merchant-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}","-d", "${USER_SERVICE_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  inventory_service_db:
    container_name: "inventory_service_db"
    image: postgres:latest
    restart: always
    ports:
      - "${INVENTORY_SERVICE_POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${INVENTORY_SERVICE_DB}
    volumes:
      - inventory_db:/var/lib/postgresql/data
    networks:
      - merchant-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}","-d", "${INVENTORY_SERVICE_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  payment_service_db:
    container_name: "payment_service_db"
    image: postgres:latest
    restart: always
    ports:
      - "${PAYMENT_SERVICE_POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${PAYMENT_SERVICE_DB}
    volumes:
      - payment_db:/var/lib/postgresql/data
    networks:
      - merchant-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}","-d", "${PAYMENT_SERVICE_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:4.0-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_WEB_PORT}:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - merchant-network

  api_gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AUTH_JWT_AUTHORITY=${AUTH_JWT_AUTHORITY}
      - AUTH_JWT_AUDIENCE=${AUTH_JWT_AUDIENCE}
      - CLIENT_BASE_URL=${CLIENT_BASE_URL}
    volumes:
      - ./ApiGateway/appsettings.json:/app/appsettings.json
      - ./ApiGateway/RoutingConfiguration:/app/RoutingConfiguration
    networks:
      - merchant-network

  inventory_service:
    build:
      context: .
      dockerfile: InventoryService/Dockerfile
    ports:
      - "5200:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_SQL_CONNECTION=${INVENTORY_SERVICE_CONNECTION_STRING}
      - RABBITMQ_CONNECTION_STRING=${RABBITMQ_CONNECTION_STRING}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - API_GATEWAY_ROUTE=${API_GATEWAY_ROUTE}
    networks:
      - merchant-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      inventory_service_db:
        condition: service_healthy


  payment_service:
    build:
      context: .
      dockerfile: PaymentService/Dockerfile
    ports:
      - "5300:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_SQL_CONNECTION=${PAYMENT_SERVICE_CONNECTION_STRING}
      - INVENTORY_SERVICE_ROUTE=${INVENTORY_SERVICE_ROUTE}
      - ORIGIN_ROUTE=${ORIGIN_ROUTE}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_FAILED_URL=${STRIPE_FAILED_URL}
      - RABBITMQ_CONNECTION_STRING=${RABBITMQ_CONNECTION_STRING}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    networks:
      - merchant-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      payment_service_db:
        condition: service_healthy

  user_service:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    ports:
      - "5100:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_SQL_CONNECTION=${USER_SERVICE_CONNECTION_STRING}
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}
      - RABBITMQ_CONNECTION_STRING=${RABBITMQ_CONNECTION_STRING}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - ADMIN_PANEL_URL=${ADMIN_PANEL_URL}
    networks:
      - merchant-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      user_service_db:
        condition: service_healthy

  notification_service:
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    ports:
      - "5400:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_PORT=${EMAIL_PORT}
      - RABBITMQ_CONNECTION_STRING=${RABBITMQ_CONNECTION_STRING}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    networks:
      - merchant-network
    depends_on:
      rabbitmq:
        condition: service_healthy



  merchant_web_app:
    container_name: "merchant-web-app"
    build:
      context: ../merchant-web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
      - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}
      - NEXT_PUBLIC_API_SERVER_SIDE_URL=${NEXT_PUBLIC_API_SERVER_SIDE_URL}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    networks:
      - merchant-network

networks:
  merchant-network:
    driver: bridge

volumes:
  user_db:
  inventory_db:
  payment_db:
  rabbitmq_data:
